/**
 * angular-drag-drop.js v1.0.1
 * --------------------------------------------------------------------
 *
 * AngularJS Drag & Drop Directive
 * @author Shoukath Mohammed <mshoukath.uideveloper@gmail.com>
 *
 * Copyright (C) 2017
 *
 * MIT License
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

 !function(){"use strict";function e(e,t,n,o,r){var a=["drop","dragstart","dragenter","dragover","dragleave","dragend"],s=function(){function n(t){l.first_load&&"destroy"!=l.options&&e(function(){l.update()})}function a(e){return e.replace(/\w\S*/g,function(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()})}function s(e){var t=a(e),n=t.substring(t.indexOf("g")+1);return t.replace(n,a(n))}function i(){l.first_load=!1}var l=this;this.options={sortBy:null,inUse:!1,storage:null,active:!1,replace:!1,properties:{},isHandle:!1,firstLoad:!1,hasDragHandle:!1},this.cols=[],this.destItem={},this.sourceItem={},this.destIndex=null,this.sourceIndex=null,this.setColumns=function(e){(e||e[0])&&(l.cols=e[0].children)},this.addClass=function(e){e.classList.contains("over")||e.classList.add("over")},this.handleDragOver=function(e){var t=e.currentTarget;e.preventDefault&&e.preventDefault(),e.dataTransfer.dropEffect="move",l.addClass(t)},this.handleDragLeave=function(e){e.currentTarget.classList.remove("over")},this.handleDragEnter=function(e){var t=e.currentTarget;l.addClass(t)},this.handleDragEnd=function(e){[].forEach.call(l.cols,function(e){e.classList.remove("over"),e.classList.remove("moving")})},this.onModelRender=function(t,o,r,a){e(i,!0),t.$watch("ngModel",n,!0)},this.handleDrop=function(e){if(l.destItem=e.currentTarget,e.stopPropagation&&e.stopPropagation(),e.preventDefault(),l.destItem.classList.remove("over"),l.sourceItem!=l.destItem){if(null===l.sourceItem)return void t.info("Invalid sortable");l.updateModel()}return!1},this.updateModel=function(){var e=l.sourceItem.index,n=l.sourceItem.model,o=l.destItem.index,a=l.destItem.model,s=l.options.properties.models||{},i=angular.copy(s.$modelValue[e]);if(s.$modelValue.indexOf(n)==-1)return void t.info("Invalid action");l.unregister(),l.options.replace?(s.$modelValue[e]=a,s.$modelValue[o]=n):(s.$modelValue.splice(e,1),s.$modelValue.splice(o,0,i)),l.onEnd=r.$emit("draggableEnd",{model:s,dropIndex:o,dragModel:n,dropModel:s.$viewValue[o],dragIndex:e})},this.update=function(){l.sourceItem=null;var e=0,n=l.options.properties.models||{};l.cols=l.cols||[],[].forEach.call(l.cols,function(t){l.options&&l.options.handle&&l.updateHandles(),t.index=e,t.model=n.$modelValue[e],e++,t.setAttribute("draggable","true"),l.register(t)}),l.options.isHandle=!0,t.info("Update sortable:")},this.activeHandle=function(){l.options.isHandle=!0},this.updateHandles=function(){var e=o[0].querySelectorAll(l.options.handle);e&&e.length&&[].forEach.call(e,function(e){var t=angular.element(e);angular.isObject(t)&&(t.unbind("mousedown",l.activeHandle),t.bind("mousedown",l.activeHandle))})},this.handleDragStart=function(e){var t=e.currentTarget;if(l.sourceItem=null,l.options&&!l.options.isHandle&&l.options.handle)return void e.preventDefault();l.options.isHandle=!1,e.dataTransfer.effectAllowed="move","IE"!=l.currentBrowser&&e.dataTransfer.setData("text/plain","anything"),l.sourceItem=t,t.classList.add("moving")},this.register=function(e){l.eventsProcessor(e,"addEventListener")},this.unregister=function(){l.options.isHandle=!1,[].forEach.call(l.cols,function(e){e.removeAttribute("draggable"),l.eventsProcessor(e,"removeEventListener")})},this.eventsProcessor=function(e,t){for(var n=0;n<l.events.length;n++)e[t](l.events[n],l["handle"+s(l.events[n])],!1)}};return s.prototype.events=a,s.prototype.currentBrowser=function(){var e=n.navigator.userAgent;return e.indexOf(".NET")!=-1?"IE":e.indexOf("Firefox")!=-1?"Firefox":"Chrome"},{getInstance:function(){return new s}}}function t(e,t,n,o,r,a){function s(e,o,s,i){function l(n){var r=d;if(n&&Object.keys(n).length>0&&(d.options=angular.extend(r.options,angular.copy(n))),"destroy"==n)return void(r.options.isHandle&&(d.options.isHandle=!1,d.unregister()));d.options=r.options||{},angular.isDefined(e.ngHtmlDragDrop.construct)&&e.ngHtmlDragDrop.construct(i.$modelValue),o[0].classList.add("widgets-sortable"),d.update(),t(function(){d.first_load=!0})}var d=d||r.getInstance();d.setColumns(o),d.options.inUse=!1,d.options.isHandle=!1,d.options.properties={scope:e,attrs:s,elem:o,models:i},a.$on("draggableEnd",function(t,n){e.$apply(),d.update()}),i?i.$render=d.onModelRender.bind(this,e,o,s,i):n.info("Missing ng-model in template"),e.$watch("ngHtmlDragDrop",l,!0)}return{restrict:"A",require:"?ngModel",scope:{ngHtmlDragDrop:"="},link:s}}angular.module("angular-html-drag-drop",[]),angular.module("angular-html-drag-drop").service("DragDropService",e),e.$inject=["$timeout","$log","$window","$document","$rootScope"],angular.module("angular-html-drag-drop").directive("ngHtmlDragDrop",t),t.$inject=["$parse","$timeout","$log","$window","DragDropService","$rootScope"]}();
//# sourceMappingURL=angular-drag-drop.min.js.map
